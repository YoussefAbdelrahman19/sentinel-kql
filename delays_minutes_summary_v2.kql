// ===== Universal Ingestion Delay Drill-down (all tables) =====
let lookback      = 24h;
let threshold_min = 10.0;   // غيرها حسب سياستك (5/15/30 دقيقة)
// نفس الدوال
let fn_resolve_source_time = (T:(*)) {
  T
  | extend SourceTime = coalesce(
      todatetime(column_ifexists("Timestamp",         datetime(null))),
      todatetime(column_ifexists("EventTime",         datetime(null))),
      todatetime(column_ifexists("DeviceReceiptTime", datetime(null))),
      todatetime(column_ifexists("EventCreationTime", datetime(null))),
      todatetime(column_ifexists("TimeCreated",       datetime(null))),
      todatetime(column_ifexists("EventEndTime",      datetime(null))),
      todatetime(column_ifexists("GeneratedTime",     datetime(null))),
      todatetime(column_ifexists("CreationTime",      datetime(null))),
      todatetime(column_ifexists("time",              datetime(null))),
      todatetime(column_ifexists("TimeGenerated",     datetime(null)))
  )
};
let fn_ingestion_delay = (T:(*)) {
  T
  | where isnotempty(TimeGenerated) and TimeGenerated > ago(lookback)
  | invoke fn_resolve_source_time()
  | extend S1_sec = tolong(datetime_diff('second', TimeGenerated,    SourceTime)),
           S2_sec = tolong(datetime_diff('second', ingestion_time(), TimeGenerated)),
           S3_sec = tolong(datetime_diff('second', ingestion_time(), SourceTime)),
           S1_min = round(toreal(S1_sec)/60.0, 2),
           S2_min = round(toreal(S2_sec)/60.0, 2),
           S3_min = round(toreal(S3_sec)/60.0, 2),
           S1_hhmmss = format_timespan(S1_sec * 1s),
           S2_hhmmss = format_timespan(S2_sec * 1s),
           S3_hhmmss = format_timespan(S3_sec * 1s),
           IngestTime = ingestion_time(),
           SkewFlag   = iff(S1_sec < 0 or S2_sec < 0 or S3_sec < 0, 1, 0);
};
union isfuzzy=true withsource=Table *
| invoke fn_ingestion_delay()
| where S3_min > threshold_min
| project Table, IngestTime, TimeGenerated, SourceTime,
          S1_min, S2_min, S3_min,
          S1_hhmmss, S2_hhmmss, S3_hhmmss,
          SkewFlag,
          Host = coalesce(column_ifexists("Computer",""), column_ifexists("DeviceName",""),
                          column_ifexists("HostName",""), column_ifexists("Hostname","")),
          SourceIP      = column_ifexists("SourceIP",""),
          DestinationIP = column_ifexists("DestinationIP",""),
          User          = coalesce(column_ifexists("Account",""), column_ifexists("User",""),
                                   column_ifexists("UserPrincipalName","")),
          _ItemId
| top 200 by S3_min desc

